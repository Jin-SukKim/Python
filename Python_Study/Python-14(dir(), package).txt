dir() 함수
    built-in function.
    it finds names a module define.
    it returns a sorted list of strings.

    ex)
        >>> import fibo, sys
        >>> dir(fibo)
        ['__name__', 'fib', 'fib2']
        >>> dir(sys)  
        ['__breakpointhook__', '__displayhook__', '__doc__', '__excepthook__',
        '__interactivehook__', '__loader__', '__name__', '__package__', '__spec__',
        '__stderr__', '__stdin__', '__stdout__', '__unraisablehook__',
        '_clear_type_cache', '_current_frames', '_debugmallocstats', '_framework',
        '_getframe', '_git', '_home', '_xoptions', 'abiflags', 'addaudithook',
        'api_version', 'argv', 'audit', 'base_exec_prefix', 'base_prefix',
        'breakpointhook', 'builtin_module_names', 'byteorder', 'call_tracing',
        'callstats', 'copyright', 'displayhook', 'dont_write_bytecode', 'exc_info',
        'excepthook', 'exec_prefix', 'executable', 'exit', 'flags', 'float_info',
        'float_repr_style', 'get_asyncgen_hooks', 'get_coroutine_origin_tracking_depth',
        'getallocatedblocks', 'getdefaultencoding', 'getdlopenflags',
        'getfilesystemencodeerrors', 'getfilesystemencoding', 'getprofile',
        'getrecursionlimit', 'getrefcount', 'getsizeof', 'getswitchinterval',
        'gettrace', 'hash_info', 'hexversion', 'implementation', 'int_info',
        'intern', 'is_finalizing', 'last_traceback', 'last_type', 'last_value',
        'maxsize', 'maxunicode', 'meta_path', 'modules', 'path', 'path_hooks',
        'path_importer_cache', 'platform', 'prefix', 'ps1', 'ps2', 'pycache_prefix',
        'set_asyncgen_hooks', 'set_coroutine_origin_tracking_depth', 'setdlopenflags',
        'setprofile', 'setrecursionlimit', 'setswitchinterval', 'settrace', 'stderr',
        'stdin', 'stdout', 'thread_info', 'unraisablehook', 'version', 'version_info',
        'warnoptions']

    without argument dir() returns lists the names that defined currently.

    ex)
        >>> a = [1, 2, 3, 4, 5]
        >>> import fibo
        >>> fib = fibo.fib
        >>> dir()
        ['__builtins__', '__name__', 'a', 'fib', 'fibo', 'sys']

    *  that it lists all types of names: variables, modules, functions, etc.

    dir() doesn't list the names of built-in functions and variables.
    To list them, using builtins

    ex)
        >>> import builtins
        >>> dir(builtins)  
        ['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException',
        'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning',
        'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError',
        'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning',
        'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False',
        'FileExistsError', 'FileNotFoundError', 'FloatingPointError',
        'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError',
        'ImportWarning', 'IndentationError', 'IndexError', 'InterruptedError',
        'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError',
        'MemoryError', 'NameError', 'None', 'NotADirectoryError', 'NotImplemented',
        'NotImplementedError', 'OSError', 'OverflowError',
        'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError',
        'ReferenceError', 'ResourceWarning', 'RuntimeError', 'RuntimeWarning',
        'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError',
        'SystemExit', 'TabError', 'TimeoutError', 'True', 'TypeError',
        'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError',
        'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning',
        'ValueError', 'Warning', 'ZeroDivisionError', '_', '__build_class__',
        '__debug__', '__doc__', '__import__', '__name__', '__package__', 'abs',
        'all', 'any', 'ascii', 'bin', 'bool', 'bytearray', 'bytes', 'callable',
        'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits',
        'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit',
        'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr',
        'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass',
        'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 'memoryview',
        'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property',
        'quit', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice',
        'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars',
        'zip']

Packages
    Packages are a way of structuring Python’s module namespace by using “dotted module names”

    ex)
        sound/                          Top-level package
        __init__.py               Initialize the sound package
        formats/                  Subpackage for file format conversions
                __init__.py
                wavread.py
                wavwrite.py
                aiffread.py
                aiffwrite.py
                auread.py
                auwrite.py
                ...
        effects/                  Subpackage for sound effects
                __init__.py
                echo.py
                surround.py
                reverse.py
                ...
        filters/                  Subpackage for filters
                __init__.py
                equalizer.py
                vocoder.py
                karaoke.py

    To handle directory as package, __init__.py is needed

    import indivisual module from package 

    ex)
        import sound.effects.echo

    This loads the submodule sound.effects.echo. It must be referenced with its full name.

    ex)
        sound.effects.echo.echofilter(input, output, delay=0.7, atten=4)

    An alternative way of importing the submodule is:

    ex)
        from sound.effects import echo

    loads the submodule echo, and makes it available without its package prefix

    ex)
        echo.echofilter(input, output, delay=0.7, atten=4)

    another variation is to import the desired function or variable directly

    ex)
        from sound.effects.echo import echofilter
     
    loads the submodule echo, but this makes its function echofilter() directly available:

    ex)
        echofilter(input, output, delay=0.7, atten=4)




